AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Marstonstone Backend Services managed by AWS SAM

Globals:
  Function:
    Timeout: 20
    MemorySize: 128
    Runtime: nodejs16.x

  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"

Parameters:
  DeployEnvironment:
    Type: String
    Description: 'Environment of deployment (dev/prod)'

Resources:
  # Lambda Functions
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub
        - 'HelloWorld-${env}'
        - env: !Ref DeployEnvironment
      CodeUri: src/functions/hello-world/
      Handler: index.handler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  # # APIs
  # InternalAPI:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: !Ref DeployEnvironment
  # Auth:
  #   # DefaultAuthorizer: CognitoAuthorizer
  #   Authorizers:
  #     CognitoAuthorizer:
  #       UserPoolArn: !Sub
  #         - 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}'
  #         - UserPoolId: !FindInMap [Cognito, UserPoolId, !Ref DeployEnvironment]

  # DynamoDB Tables

  # Cognito User Pools
  StaffUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub
        - 'StaffPool-${env}'
        - env: !Ref DeployEnvironment
      UsernameConfiguration:
        CaseSensitive: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: false
          TemporaryPasswordValidityDays: 7

  # Cognito User Pool Clients
  StaffUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref StaffUserPool
      GenerateSecret: false

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # HelloWorldApi:
  #   Description: 'API Gateway endpoint URL for Prod stage for Hello World function'
  #   Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/'
  # HelloWorldFunction:
  #   Description: 'Hello World Lambda Function ARN'
  #   Value: !GetAtt HelloWorldFunction.Arn
  StaffUserPool:
    Description: 'Staff UserPool Id'
    Value: !Ref StaffUserPool

  StaffUserPoolClient:
    Description: 'Staff UserPool Client Id'
    Value: !Ref StaffUserPoolClient
